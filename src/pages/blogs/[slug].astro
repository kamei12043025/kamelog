---
import PageLayout from 'src/layouts/PageLayout.astro'
import { newtClient } from '../../lib/newt'
import type { BlogArticles } from '../../types/BlogArticles.astro'
import 'highlight.js/styles/github.css'
import 'highlight.js/styles/github-dark.css'

export const getStaticPaths = async () => {
  const { items: blogs } = await newtClient.getContents<BlogArticles>({
    appUid: 'blog',
    modelUid: 'article',
    query: {
      select: ['title', 'slug', 'body'],
    },
  })
  return blogs.map((blog) => ({
    params: { slug: blog.slug },
    props: { blog },
  }))
}

const { blog } = Astro.props
---

<PageLayout title={blog.title} description="投稿詳細ページです">
  <h1 class="newt-content-title mb-8 max-w-[780px] mx-auto">{blog.title}</h1>
  <article set:html={blog.body} class="newt-content max-w-[780px] mx-auto" />
</PageLayout>

<script>
  import hljs from 'highlight.js/lib/core'
  import javascript from 'highlight.js/lib/languages/javascript'

  hljs.registerLanguage('javascript', javascript)

  function applyHighlight() {
    document.querySelectorAll('pre code').forEach((el) => {
      hljs.highlightElement(el as HTMLElement)
    })
  }

  function updateHighlightTheme() {
    const isDarkMode = document.documentElement.classList.contains('dark')
    document.body.classList.toggle('hljs-dark', isDarkMode)
    document.body.classList.toggle('hljs-light', !isDarkMode)
  }

  function initializeHighlight() {
    applyHighlight()
    updateHighlightTheme()
  }

  document.addEventListener('DOMContentLoaded', initializeHighlight)
  document.addEventListener('astro:page-load', initializeHighlight)

  // テーマ切り替え時にハイライトスタイルを更新
  document.addEventListener('themeChanged', updateHighlightTheme)
</script>
